<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tlkj.dao.DepartmentMapper">
	<resultMap id="BaseResultMap" type="tlkj.model.Department">
		<id column="Id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="phonenumber" property="phonenumber" jdbcType="VARCHAR" />
		<result column="belongstreet" property="belongstreet" jdbcType="VARCHAR" />
		<result column="level" property="level" jdbcType="INTEGER" />
		<result column="parentId" property="parentid" jdbcType="INTEGER" />
		<result column="createrId" property="createrid" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		Id, name, allowPathPattern, level, parentId, createrId
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_department
		where Id = #{id,jdbcType=INTEGER}
	</select>
	<select id="getAllDepartment" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_department
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		t_department
		where Id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="tlkj.model.Department">
		insert into t_department (Id,
		name, address,phonenumber,belongstreet,
		level, parentId, createrId
		)
		values
		(#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR},#{phonenumber,jdbcType=VARCHAR},#{belongstreet,jdbcType=VARCHAR},
		#{level,jdbcType=INTEGER},
		#{parentid,jdbcType=INTEGER}, #{createrid,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="tlkj.model.Department">
		insert into t_department
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				Id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="phonenumber != null">
				phonenumber,
			</if>
			<if test="belongstreet != null">
				belongstreet,
			</if>
			<if test="level != null">
				level,
			</if>
			<if test="parentid != null">
				parentId,
			</if>
			<if test="createrid != null">
				createrId,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="phonenumber != null">
				#{phonenumber,jdbcType=VARCHAR},
			</if>
			<if test="belongstreet != null">
				#{belongstreet,jdbcType=VARCHAR},
			</if>
			<if test="level != null">
				#{level,jdbcType=INTEGER},
			</if>
			<if test="parentid != null">
				#{parentid,jdbcType=INTEGER},
			</if>
			<if test="createrid != null">
				#{createrid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="tlkj.model.Department">
		update t_department
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="phonenumber != null">
				phonenumber = #{phonenumber,jdbcType=VARCHAR},
			</if>
			<if test="belongstreet != null">
				belongstreet = #{belongstreet,jdbcType=VARCHAR},
			</if>
			<if test="level != null">
				level = #{level,jdbcType=INTEGER},
			</if>
			<if test="parentid != null">
				parentId = #{parentid,jdbcType=INTEGER},
			</if>
			<if test="createrid != null">
				createrId = #{createrid,jdbcType=INTEGER},
			</if>
		</set>
		where Id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="tlkj.model.Department">
		update
		t_department
		set name = #{name,jdbcType=VARCHAR},
		address =
		#{address,jdbcType=VARCHAR},
		phonenumber =
		#{phonenumber,jdbcType=VARCHAR},
		belongstreet =
		#{belongstreet,jdbcType=VARCHAR},
		level =
		#{level,jdbcType=INTEGER},
		parentId = #{parentid,jdbcType=INTEGER},
		createrId = #{createrid,jdbcType=INTEGER}
		where Id =
		#{id,jdbcType=INTEGER}
	</update>

</mapper>