<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tlkj.dao.Hc_sdbkryMapper" >
  <resultMap id="BaseResultMap" type="tlkj.model.Hc_sdbkry" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="createDepartmentId" property="createdepartmentid" jdbcType="INTEGER" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="createrPoliceNum" property="createrpolicenum" jdbcType="VARCHAR" />
    <result column="personAddress" property="personaddress" jdbcType="VARCHAR" />
    <result column="personId" property="personid" jdbcType="VARCHAR" />
    <result column="personName" property="personname" jdbcType="VARCHAR" />
    <result column="policeContact" property="policecontact" jdbcType="VARCHAR" />
    <result column="policePhone" property="policephone" jdbcType="VARCHAR" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="reserved" property="reserved" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, createDepartmentId, createTime, createrPoliceNum, personAddress, personId, personName, 
    policeContact, policePhone, reason, reserved
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_hc_sdbkry
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_hc_sdbkry
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="tlkj.model.Hc_sdbkry" >
    insert into t_hc_sdbkry (Id, createDepartmentId, createTime, 
      createrPoliceNum, personAddress, personId, 
      personName, policeContact, policePhone, 
      reason, reserved)
    values (#{id,jdbcType=INTEGER}, #{createdepartmentid,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{createrpolicenum,jdbcType=VARCHAR}, #{personaddress,jdbcType=VARCHAR}, #{personid,jdbcType=VARCHAR}, 
      #{personname,jdbcType=VARCHAR}, #{policecontact,jdbcType=VARCHAR}, #{policephone,jdbcType=VARCHAR}, 
      #{reason,jdbcType=VARCHAR}, #{reserved,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="tlkj.model.Hc_sdbkry" >
    insert into t_hc_sdbkry
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="createdepartmentid != null" >
        createDepartmentId,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="createrpolicenum != null" >
        createrPoliceNum,
      </if>
      <if test="personaddress != null" >
        personAddress,
      </if>
      <if test="personid != null" >
        personId,
      </if>
      <if test="personname != null" >
        personName,
      </if>
      <if test="policecontact != null" >
        policeContact,
      </if>
      <if test="policephone != null" >
        policePhone,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="reserved != null" >
        reserved,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createdepartmentid != null" >
        #{createdepartmentid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createrpolicenum != null" >
        #{createrpolicenum,jdbcType=VARCHAR},
      </if>
      <if test="personaddress != null" >
        #{personaddress,jdbcType=VARCHAR},
      </if>
      <if test="personid != null" >
        #{personid,jdbcType=VARCHAR},
      </if>
      <if test="personname != null" >
        #{personname,jdbcType=VARCHAR},
      </if>
      <if test="policecontact != null" >
        #{policecontact,jdbcType=VARCHAR},
      </if>
      <if test="policephone != null" >
        #{policephone,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="reserved != null" >
        #{reserved,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="tlkj.model.Hc_sdbkry" >
    update t_hc_sdbkry
    <set >
      <if test="createdepartmentid != null" >
        createDepartmentId = #{createdepartmentid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createrpolicenum != null" >
        createrPoliceNum = #{createrpolicenum,jdbcType=VARCHAR},
      </if>
      <if test="personaddress != null" >
        personAddress = #{personaddress,jdbcType=VARCHAR},
      </if>
      <if test="personid != null" >
        personId = #{personid,jdbcType=VARCHAR},
      </if>
      <if test="personname != null" >
        personName = #{personname,jdbcType=VARCHAR},
      </if>
      <if test="policecontact != null" >
        policeContact = #{policecontact,jdbcType=VARCHAR},
      </if>
      <if test="policephone != null" >
        policePhone = #{policephone,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="reserved != null" >
        reserved = #{reserved,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="tlkj.model.Hc_sdbkry" >
    update t_hc_sdbkry
    set createDepartmentId = #{createdepartmentid,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      createrPoliceNum = #{createrpolicenum,jdbcType=VARCHAR},
      personAddress = #{personaddress,jdbcType=VARCHAR},
      personId = #{personid,jdbcType=VARCHAR},
      personName = #{personname,jdbcType=VARCHAR},
      policeContact = #{policecontact,jdbcType=VARCHAR},
      policePhone = #{policephone,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      reserved = #{reserved,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>