<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tlkj.dao.Illegal_terminalMapper" >
  <resultMap id="BaseResultMap" type="tlkj.model.Illegal_terminal" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="imei" property="imei" jdbcType="VARCHAR" />
    <result column="imsi" property="imsi" jdbcType="VARCHAR" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="departmentId" property="departmentid" jdbcType="INTEGER" />
    <result column="loginTime" property="logintime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, imei, imsi, userId, departmentId, loginTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_illegal_terminal
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_illegal_terminal
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="tlkj.model.Illegal_terminal" >
    insert into t_illegal_terminal (id, imei, imsi, 
      userId, departmentId, loginTime
      )
    values (#{id,jdbcType=INTEGER}, #{imei,jdbcType=VARCHAR}, #{imsi,jdbcType=VARCHAR}, 
      #{userid,jdbcType=INTEGER}, #{departmentid,jdbcType=INTEGER}, #{logintime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="tlkj.model.Illegal_terminal" >
    insert into t_illegal_terminal
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="imei != null" >
        imei,
      </if>
      <if test="imsi != null" >
        imsi,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="departmentid != null" >
        departmentId,
      </if>
      <if test="logintime != null" >
        loginTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="imei != null" >
        #{imei,jdbcType=VARCHAR},
      </if>
      <if test="imsi != null" >
        #{imsi,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null" >
        #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="logintime != null" >
        #{logintime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="tlkj.model.Illegal_terminal" >
    update t_illegal_terminal
    <set >
      <if test="imei != null" >
        imei = #{imei,jdbcType=VARCHAR},
      </if>
      <if test="imsi != null" >
        imsi = #{imsi,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null" >
        departmentId = #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="logintime != null" >
        loginTime = #{logintime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="tlkj.model.Illegal_terminal" >
    update t_illegal_terminal
    set imei = #{imei,jdbcType=VARCHAR},
      imsi = #{imsi,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=INTEGER},
      departmentId = #{departmentid,jdbcType=INTEGER},
      loginTime = #{logintime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>